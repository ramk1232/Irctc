<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-24T15:11:29Z" name="Default suite" finished-at="2023-07-24T15:13:24Z" duration-ms="114370">
    <groups>
    </groups>
    <test started-at="2023-07-24T15:11:29Z" name="Default test" finished-at="2023-07-24T15:13:24Z" duration-ms="114370">
      <class name="com.irctc.testLayer.Irctctest">
        <test-method is-config="true" signature="initializeBrowser()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:11:29Z" name="initializeBrowser" finished-at="2023-07-24T15:12:04Z" duration-ms="34927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="img75YrLogo()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:04Z" name="img75YrLogo" finished-at="2023-07-24T15:12:04Z" duration-ms="17" status="FAIL">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problem: 
river cannot be resolved to a variable
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problem: 
river cannot be resolved to a variable

at com.irctc.testLayer.Irctctest.img75YrLogo(Irctctest.java:21)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- img75YrLogo -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:04Z" name="beforemethod" finished-at="2023-07-24T15:12:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:04Z" name="afterMethod" finished-at="2023-07-24T15:12:05Z" duration-ms="754" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=img75YrLogo status=FAILURE method=Irctctest.img75YrLogo()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fr()[pri:1, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:05Z" name="fr" finished-at="2023-07-24T15:12:05Z" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fr -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:05Z" name="beforemethod" finished-at="2023-07-24T15:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:05Z" name="beforemethod" finished-at="2023-07-24T15:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="cl1()[pri:2, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:05Z" name="cl1" finished-at="2023-07-24T15:12:06Z" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cl1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:05Z" name="afterMethod" finished-at="2023-07-24T15:12:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fr status=SUCCESS method=Irctctest.fr()[pri:1, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="to()[pri:3, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="to" finished-at="2023-07-24T15:12:06Z" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- to -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="beforemethod" finished-at="2023-07-24T15:12:06Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="afterMethod" finished-at="2023-07-24T15:12:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cl1 status=SUCCESS method=Irctctest.cl1()[pri:2, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="clk2()[pri:4, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="clk2" finished-at="2023-07-24T15:12:06Z" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clk2 -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="beforemethod" finished-at="2023-07-24T15:12:06Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="afterMethod" finished-at="2023-07-24T15:12:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=to status=SUCCESS method=Irctctest.to()[pri:3, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="afterMethod" finished-at="2023-07-24T15:12:06Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clk2 status=SUCCESS method=Irctctest.clk2()[pri:4, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="beforemethod" finished-at="2023-07-24T15:12:06Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="ckBox()[pri:5, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="ckBox" finished-at="2023-07-24T15:12:06Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ckBox -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="afterMethod" finished-at="2023-07-24T15:12:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ckBox status=SUCCESS method=Irctctest.ckBox()[pri:5, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="beforemethod" finished-at="2023-07-24T15:12:06Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="dropD()[pri:6, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:06Z" name="dropD" finished-at="2023-07-24T15:12:20Z" duration-ms="14072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropD -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:20Z" name="afterMethod" finished-at="2023-07-24T15:12:20Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dropD status=SUCCESS method=Irctctest.dropD()[pri:6, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="serh()[pri:7, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:20Z" name="serh" finished-at="2023-07-24T15:12:21Z" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serh -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:20Z" name="beforemethod" finished-at="2023-07-24T15:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:21Z" name="afterMethod" finished-at="2023-07-24T15:12:21Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=serh status=SUCCESS method=Irctctest.serh()[pri:7, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:21Z" name="beforemethod" finished-at="2023-07-24T15:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="allCkBoxess()[pri:8, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:21Z" name="allCkBoxess" finished-at="2023-07-24T15:12:28Z" duration-ms="6749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allCkBoxess -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:28Z" name="afterMethod" finished-at="2023-07-24T15:12:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=allCkBoxess status=SUCCESS method=Irctctest.allCkBoxess()[pri:8, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:28Z" name="beforemethod" finished-at="2023-07-24T15:12:28Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="irctcLogos2()[pri:9, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:12:28Z" name="irctcLogos2" finished-at="2023-07-24T15:13:23Z" duration-ms="55950" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=113.0.5672.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.208.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.93, chrome: {chromedriverVersion: 113.0.5672.24 (65f30d4e8051..., userDataDir: C:\Users\ramko\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56851}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e5d3cdccc57d4861c3237c72e552d9ad
*** Element info: {Using=xpath, value=(//div[@class='ng-star-inserted'])[10]//table//tr//td[3]//div//strong}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=113.0.5672.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.208.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.93, chrome: {chromedriverVersion: 113.0.5672.24 (65f30d4e8051..., userDataDir: C:\Users\ramko\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56851}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e5d3cdccc57d4861c3237c72e552d9ad
*** Element info: {Using=xpath, value=(//div[@class='ng-star-inserted'])[10]//table//tr//td[3]//div//strong}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.toString(Unknown Source)
at java.base/java.lang.String.valueOf(String.java:4213)
at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
at org.openqa.selenium.support.ui.ExpectedConditions$23.toString(ExpectedConditions.java:683)
at java.base/java.lang.String.valueOf(String.java:4213)
at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:268)
at com.irctc.pageLayer.bokingTrinList.trainDatfle(bokingTrinList.java:94)
at com.irctc.testLayer.Irctctest.irctcLogos2(Irctctest.java:101)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- irctcLogos2 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:13:23Z" name="afterMethod" finished-at="2023-07-24T15:13:24Z" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=irctcLogos2 status=FAILURE method=Irctctest.irctcLogos2()[pri:9, instance:com.irctc.testLayer.Irctctest@6c284af] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=113.0.5672.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.208.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.93, chrome: {chromedriverVersion: 113.0.5672.24 (65f30d4e8051..., userDataDir: C:\Users\ramko\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56851}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e5d3cdccc57d4861c3237c72e552d9ad]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=113.0.5672.93)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'RKAINS007', ip: '192.168.208.234', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.2.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.93, chrome: {chromedriverVersion: 113.0.5672.24 (65f30d4e8051..., userDataDir: C:\Users\ramko\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56851}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e5d3cdccc57d4861c3237c72e552d9ad
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.irctc.utils.Utility.captureScreenshot(Utility.java:43)
at com.irctc.baseclass.BaseClass.afterMethod(BaseClass.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.irctc.testLayer.Irctctest@6c284af]" started-at="2023-07-24T15:13:24Z" name="tearDown" finished-at="2023-07-24T15:13:24Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.irctc.testLayer.Irctctest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
